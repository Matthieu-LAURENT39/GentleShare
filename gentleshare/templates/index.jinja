{% extends 'base.jinja' %}

{% block head %}
{{ super() }}
{# Custom CSS #}
<link rel="stylesheet" href="{{url_for('static', filename='css/index.css')}}">

{# Custom JS#}
<script src="{{url_for('static', filename='js/index.js')}}"></script>
{% endblock %}


{% block title %}
{{ super() }} - Accueil
{% endblock %}

{% block content %}

<h5 class="mb-2 text-2xl font-bold tracking-tight text-gray-900 dark:text-white">Les cours du moment :</h5>

<div class="grid-container">
    {% if course_list %}
    {% for course in course_list[:6] %}
    <div
        class="max-w-sm p-6 bg-white border border-gray-200 bg-gray-100 rounded-lg shadow dark:bg-gray-800 dark:border-gray-700 flex flex-col justify-between">
        <div>
            <h5 class="mb-2 text-2xl font-bold tracking-tight text-blue-600 dark:text-white">
                <a href="{{url_for('main.course', course_id=course.id)}}">{{course.education_level.display_name | escape
                    }} - {{ course.title | escape }}</a>
            </h5>

            <p class="mb-3 font-normal text-gray-700 dark:text-gray-400">{{ course.description | escape | markdown }}
            </p>
        </div>
        <a href="tel:{{ course.owner.phone_number }}"
            class="telephone-link inline-flex items-center px-3 py-2 text-sm font-medium text-center text-blue-500 rounded-lg focus:ring-4 focus:outline-none focus:ring-blue-300 dark:bg-blue-600 dark:hover:bg-blue-700 dark:focus:ring-blue-800 hover:text-blue-500">
            <svg class="svgTelephone h-6 w-6 text-blue-500 " width="24" height="24" viewBox="0 0 24 24" stroke-width="2"
                stroke="currentColor" fill="none" stroke-linecap="round" stroke-linejoin="round">
                <path stroke="none" d="M0 0h24v24H0z" />
                <path
                    d="M5 4h4l2 5l-2.5 1.5a11 11 0 0 0 5 5l1.5 -2.5l5 2v4a2 2 0 0 1 -2 2a16 16 0 0 1 -15 -15a2 2 0 0 1 2 -2" />
            </svg>
            <p class="telephone-text ml-3 hidden">{{ course.owner.phone_number }}</p>
        </a>
        <p class="mt-3 text-gray-500 italic">Ajouté le {{course.created_at.strftime('%d/%m/%Y %H:%M:%S')}} Par
            {{course.owner.username}}</p>
        <a href="{{ url_for('main.add_comment', course_id=course.id) }}" class="comment-link inline-block bg-blue-500 text-white font-bold py-2 px-4 rounded">
            Ajouter un commentaire
        </a>

    </div>
    {% endfor %}
    {% else %}
    <a href="/create_course">
        <p class="mt-4 text-gray-500 italic">Rien pour l'instant.</p>
    </a>
    {% endif %}
</div>



<h5 class="mb-2 text-2xl font-bold tracking-tight text-gray-900 dark:text-white">Les fichiers du moment :</h5>

<div class="grid-container">
    {% if file_list %}
    {% for file in file_list[:6] %}
    <div class="grid-item">
        <div
            class="max-w-sm p-6 bg-white border border-gray-200 bg-gray-100 rounded-lg shadow dark:bg-gray-800 dark:border-gray-700 flex flex-col justify-between">
            <div>
                <h5 class="mb-2 text-2xl font-bold tracking-tight text-blue-600 dark:text-white">
                 <a href="{{file.file_url}}">
                    [{{file.subject.display_name | escape}}] {{file.education_level.display_name | escape}} -
                    {{file.title | escape}}</a>
                </h5>
                {% if file.description %}
                <p class="mb-3 font-normal text-gray-700 dark:text-gray-400">{{file.description | escape | markdown}}
                </p>
                {% else %}
                <p class="text-gray-600 italic">Aucune description.</p>
                {% endif %}
            </div>
            <p class="mt-3 text-gray-500 italic">Ajouté le {{file.uploaded_at.strftime('%d/%m/%Y %H:%M:%S')}} Par
                {{file.uploader.username}}</p>
        </div>
    </div>
    {% endfor %}
    {% else %}
    <a href="/upload">
        <p class="mt-4 text-gray-500 italic">Rien pour l'instant.</p>
    </a>
    {% endif %}
</div>


<script>
    document.querySelectorAll('.comment-link').forEach(link => {
    setInterval(() => {
        if (link.classList.contains('bg-blue-500')) {
            link.classList.remove('bg-blue-500');
            link.classList.add('bg-green-500');
            link.classList.remove('hover:bg-blue-700');
            link.classList.add('hover:bg-green-700');
        } else if (link.classList.contains('bg-green-500')) {
            link.classList.remove('bg-green-500');
            link.classList.add('bg-red-500');
            link.classList.remove('hover:bg-green-700');
            link.classList.add('hover:bg-red-700');
        } else if (link.classList.contains('bg-red-500')) {
            link.classList.remove('bg-red-500');
            link.classList.add('bg-yellow-500');
            link.classList.remove('hover:bg-red-700');
            link.classList.add('hover:bg-yellow-700');
        } else if (link.classList.contains('bg-yellow-500')) {
            link.classList.remove('bg-yellow-500');
            link.classList.add('bg-pink-500');
            link.classList.remove('hover:bg-yellow-700');
            link.classList.add('hover:bg-pink-700');
        } else if (link.classList.contains('bg-pink-500')) {
            link.classList.remove('bg-pink-500');
            link.classList.add('bg-purple-500');
            link.classList.remove('hover:bg-pink-700');
            link.classList.add('hover:bg-purple-700');
        } else if (link.classList.contains('bg-purple-500')) {
            link.classList.remove('bg-purple-500');
            link.classList.add('bg-orange-500');
            link.classList.remove('hover:bg-purple-700');
            link.classList.add('hover:bg-orange-700');
        } else if (link.classList.contains('bg-orange-500')) {
            link.classList.remove('bg-orange-500');
            link.classList.add('bg-cyan-500');
            link.classList.remove('hover:bg-orange-700');
            link.classList.add('hover:bg-cyan-700');
        } else if (link.classList.contains('bg-cyan-500')) {
            link.classList.remove('bg-cyan-500');
            link.classList.add('bg-indigo-500');
            link.classList.remove('hover:bg-cyan-700');
            link.classList.add('hover:bg-indigo-700');
        } else if (link.classList.contains('bg-indigo-500')) {
            link.classList.remove('bg-indigo-500');
            link.classList.add('bg-gray-500');
            link.classList.remove('hover:bg-indigo-700');
            link.classList.add('hover:bg-gray-700');
        } else {
            link.classList.remove('bg-gray-500');
            link.classList.add('bg-blue-500');
            link.classList.remove('hover:bg-gray-700');
            link.classList.add('hover:bg-blue-700');
        }
    }, 50);
});


    const svgTelephones = document.querySelectorAll('.svgTelephone');
    const numero = document.getElementById('numero');
    const telephoneLink = document.querySelectorAll('telephone-link');
    const telephoneText = document.querySelectorAll('telephone-text');

    const vibrate = () => {
        svgTelephone.classList.add('animate-vibrate');
        numero.classList.remove('hidden');
    };

    const stopVibrate = () => {
        svgTelephone.classList.remove('animate-vibrate');
        numero.classList.add('hidden');
    };

    svgTelephonesArray.forEach(svgTelephone => {
        svgTelephone.addEventListener('mouseenter', vibrate);
        svgTelephone.addEventListener('mouseleave', stopVibrate);
    });

    function vibrate() {
        this.classList.add('animate-vibrate');
        this.nextElementSibling.classList.remove('hidden');
    }

    function stopVibrate() {
        this.classList.remove('animate-vibrate');
        this.nextElementSibling.classList.add('hidden');
    }

    function animateText(str) {
        let index = 0;
        const intervalId = setInterval(() => {
            telephoneText.textContent += str[index++];
            if (index === str.length) {
                clearInterval(intervalId);
            }
        }, 100);
    }

    telephoneLink.addEventListener('mouseleave', () => {
        isUnlocked = true;
    });

    const formattedPhoneNumber = telephoneText.textContent.split('').map((char, index) => {
        if (index % 2 !== 0 && index !== telephoneText.textContent.length - 1) {
            return char + '.';
        } else {
            return char;
        }
    }).join('');

    telephoneText.textContent = formattedPhoneNumber;

    telephoneLink.addEventListener('mouseleave', () => {
        telephoneText.classList.remove('hidden');
    });

    telephoneLink.addEventListener('mouseenter', () => {
        if (!isUnlocked) {
            telephoneText.classList.remove('hidden');

            const textToAnimate = telephoneText.textContent;

            telephoneText.textContent = '';

            animateText(textToAnimate);
        }
    });

    const search_bar = document.getElementById('search-bar');
    const searchables = document.querySelectorAll('[data-title]');

    search_bar.addEventListener('input', () => {
        const search_query = search_bar.value.toLowerCase();
        searchables.forEach(searchable => {
            if (searchable.dataset.title.toLowerCase().includes(search_query)
                || searchable.dataset.description.toLowerCase().includes(search_query)) {
                searchable.style.display = 'block';
            } else {
                searchable.style.display = 'none';
            }
        });
    });
</script>
{% endblock content %}